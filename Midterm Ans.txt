Question 6
void rounder(float* flist, int flist_size)

{
	for (int i =  0; i < flist_size; i++)
	{
		//both would would get the current value
		float temp = flist[i];
		//float temp = *(flist + i);

		temp = temp * 10.f;         //5.345 -> 53.45

		int temp = int(temp);       //53.45 -> 53

		//looks at the hundredths place and applies the rounding rule
		if (temp - item >= 0.5)
			itemp++;

		flist[i] = itemp / 10.0;    //53 -> 5.3
	}
}

Question 3
==utility.h==
#ifindef _UTILITY_H
#define _UTILITY_H 

unsighned int binary_to_decimal(const char* bstr)
{

}

==utility.c==
unsighned int binary_to_decimal(const char* bstr)
{
	int cpos = strlen(bstr) - 1; //index the last character
	int place_value = 1;
	unsigned int total = 0;
	while (cpos >= 0)
		.........
}

==main.c==

#include "utility.h"
#include <stdio.h>
#include <string.h>

int main(int argc, char** argv)
{
	const int s_size = sizeof(unsigned int) * 8;
	char s[s_size + 1];
	char s[sizeof(unsigned int) * 8 + 1];
	printf("enter a %zu-digit binary string: ", sizeof(unsigned int) * 8;
	fgets(s, s_size, stdin)
	printf("'b%s'.........
	return 0;